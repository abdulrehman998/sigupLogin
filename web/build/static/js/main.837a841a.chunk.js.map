{"version":3,"sources":["server.js","context/Reducer.js","context/Context.js","components/login/index.jsx","components/signup/index.jsx","img/splash.png","components/Splash/splash.js","components/profile/post.jsx","components/profile/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","reducer","state","action","type","payload","name","email","_id","user","console","log","darkTheme","GlobalContext","createContext","data","undefined","ContextProvider","children","useReducer","dispatch","Provider","value","validationSchema","yup","required","password","min","max","Weather","useHistory","useContext","formik","useFormik","initialValues","onSubmit","values","axios","post","withCredentials","then","res","address","phoneNumber","gender","style","margin","handleSubmit","Box","sx","flexGrow","Grid","container","spacing","item","md","xs","TextField","fullWidth","color","id","label","variant","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","history","genderValue","document","querySelector","Number","alert","push","FormControl","component","FormLabel","textAlign","RadioGroup","defaultValue","FormControlLabel","control","Radio","Splash","backgroundColor","width","height","position","bottom","src","img","alt","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","RecipeReviewCard","text","timestamp","React","Card","maxWidth","CardHeader","avatar","Avatar","bgcolor","red","title","subheader","CardContent","Typography","CardActions","disableSpacing","Dashboard","useState","inputText","setInputText","posts","setPosts","refresh","setRefresh","isMore","setIsMore","useEffect","get","Stack","direction","multiline","rows","e","target","placeholder","onClick","postText","map","eachPost","length","newPosts","App","catch","Navbar","className","Container","Brand","href","Toggle","Collapse","Nav","Link","exact","path","Login","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.837a841a.chunk.js","sourcesContent":["const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case \"USER_LOGIN\": {\r\n      if (\r\n        action.payload.name &&\r\n        action.payload.email &&\r\n        action.payload._id ) {\r\n\r\n        return { ...state, user: action.payload }\r\n\r\n      } else {\r\n        console.log(`invalid data in USER_LOGIN reducer `);\r\n        return state;\r\n      }\r\n    }\r\n    case \"USER_LOGOUT\": {\r\n      return { ...state, user: null } // set this to null on purpose, do not change\r\n    }\r\n    case \"TOGGLE_THEME\": {\r\n      return { ...state, darkTheme: !state.darkTheme } // set this to null on purpose, do not change\r\n    }\r\n\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport { reducer } from './Reducer';\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n  darkTheme: true,\r\n  user: undefined\r\n}\r\n\r\nexport default function ContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, data)\r\n  \r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","import { useState, useEffect, useRef } from \"react\"\r\nimport axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../server\"\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport { GlobalContext } from '../../context/Context';\r\nimport { useContext } from \"react\";\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction Weather() {\r\n  let history = useHistory();\r\n\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values)\r\n\r\n      axios.post(`${baseUrl}/api/v1/login`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      }, {\r\n        withCredentials: true\r\n      })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n\r\n          if (res.data.email) {\r\n\r\n            dispatch({\r\n              type: \"USER_LOGIN\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                _id: res.data._id,\r\n                address: res.data.address,\r\n                phoneNumber: res.data.phoneNumber,\r\n                gender: res.data.gender,\r\n              }\r\n            })\r\n            // history.push(\"/\")\r\n          }\r\n\r\n\r\n        })\r\n\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem\" }}>\r\n        <h1>Login page</h1>\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={6} >\r\n                <TextField\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  id=\"outlined-basic\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n\r\n                  name=\"email\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n              </Grid>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={6} >\r\n                <TextField\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  id=\"filled-basic\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n\r\n                  name=\"password\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n\r\n                  error={formik.touched.password && Boolean(formik.errors.password)}\r\n                  helperText={formik.touched.password && formik.errors.password}\r\n                />\r\n              </Grid>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={5}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={2}>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n              </Grid>\r\n              <Grid item xs={12} md={5}>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </form>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Weather;","import axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"../../server\";\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst validationSchema = yup.object({\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n    address: yup\r\n        .string('Enter your Address')\r\n        .required('Address is required'),\r\n    phoneNumber: yup\r\n        .string(\"Enter your phone number\")\r\n        .min(10, \"Phone number should be 10 integers long\")\r\n        .required(\"Phone number is required\"),\r\n});\r\n\r\nfunction Weather() {\r\n\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            password: \"\",\r\n            address: \"\",\r\n        },\r\n        onSubmit: function (values)  {\r\n            const genderValue = document.querySelector(\r\n                'input[name=\"gender\"]:checked'\r\n            ).value;\r\n            axios\r\n                .post(`${baseUrl}/api/v1/signup`, {\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    gender: genderValue,\r\n                    phoneNumber: Number(values.phoneNumber),\r\n                    password: values.password,\r\n                    address: values.address,\r\n                })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                    alert(\"Successfully Signed Up\")\r\n                    history.push(\"/\")\r\n\r\n                })\r\n               \r\n        },\r\n    });\r\n\r\n    return (\r\n        <div style={{ margin: \"1rem\" }}>\r\n        <h1>Signup page</h1>\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Full Name\"\r\n                            variant=\"standard\"\r\n\r\n                            name=\"name\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.name && Boolean(formik.errors.name)}\r\n                            helperText={formik.touched.name && formik.errors.name}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Email\"\r\n                            variant=\"standard\"\r\n\r\n                            name=\"email\"\r\n                            value={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.email && Boolean(formik.errors.email)}\r\n                            helperText={formik.touched.email && formik.errors.email}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"filled-basic\"\r\n                            label=\"Password\"\r\n                            variant=\"standard\"\r\n                            type=\"password\"\r\n\r\n                            name=\"password\"\r\n                            value={formik.values.password}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.password && Boolean(formik.errors.password)}\r\n                            helperText={formik.touched.password && formik.errors.password}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"filled-basic\"\r\n                            label=\"Address\"\r\n                            variant=\"standard\"\r\n                            type=\"address\"\r\n\r\n                            name=\"address\"\r\n                            value={formik.values.address}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.address && Boolean(formik.errors.address)}\r\n                            helperText={formik.touched.address && formik.errors.address}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            name=\"phoneNumber\"\r\n                            label=\"Phone Number\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.phoneNumber}\r\n                            onChange={formik.handleChange}\r\n                            error={\r\n                                formik.touched.phoneNumber && Boolean(formik.errors.phoneNumber)\r\n                            }\r\n                            helperText={\r\n                                formik.touched.phoneNumber && formik.errors.phoneNumber\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\" style={{ textAlign: \"left\" }}>\r\n                                Gender\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                                aria-label=\"gender\"\r\n                                defaultValue=\"male\"\r\n                                name=\"genderParent\"\r\n                            >\r\n                                <FormControlLabel\r\n                                    name=\"gender\"\r\n                                    value=\"male\"\r\n                                    control={<Radio />}\r\n                                    label=\"Male\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    name=\"gender\"\r\n                                    value=\"female\"\r\n                                    control={<Radio />}\r\n                                    label=\"Female\"\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Button fullWidth variant=\"contained\" type=\"submit\">Signup</Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n        </form>\r\n\r\n    </div>\r\n    );\r\n}\r\nexport default Weather;","export default __webpack_public_path__ + \"static/media/splash.257ba1d2.png\";","import img from \"./../../img/splash.png\"\r\n\r\n\r\nfunction Splash() {\r\n\r\n    return (\r\n        <>\r\n            <div style={{backgroundColor: \"#181415\", width: \"100%\", height: \"100vh\"}}>\r\n\r\n                <img style={{\r\n                    width: \"100%\",\r\n                    position: \"fixed\",\r\n                    bottom: \"0px\"\r\n                }}\r\n                    src={img} alt=\"\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Splash;","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n    const { text, email, name, timestamp } = props;\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <Card sx={{ maxWidth: 345 }}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                        {name}\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                }\r\n                title={name}\r\n                subheader={email}\r\n                \r\n            />\r\n            \r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {text}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                    <ShareIcon />\r\n                </IconButton>\r\n            </CardActions>\r\n            \r\n        </Card>\r\n    );\r\n}","import axios from 'axios';\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport { baseUrl } from \"./../../server\"\r\nimport { GlobalContext } from './../../context/Context';\r\nimport { useContext } from \"react\";\r\nimport Post from \"./post\"\r\n\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const [posts, setPosts] = useState([])\r\n    const [refresh, setRefresh] = useState(false)\r\n    const [isMore, setIsMore] = useState(true)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/posts?page=0`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                setPosts(res.data)\r\n            })\r\n    }, [refresh])\r\n\r\n    const loadMore = () => {\r\n        axios.get(`${baseUrl}/api/v1/posts?page=${posts.length}`,\r\n            {\r\n                withCredentials: true\r\n            })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                if (res.data?.length) {\r\n                    const newPosts = [...posts, ...res.data]\r\n                    setPosts(newPosts)\r\n                } else {\r\n                    setIsMore(false)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const submit = () => {\r\n        if (inputText !== \"\") {\r\n            axios.post(`${baseUrl}/api/v1/post`, {\r\n                postText: inputText\r\n            }, {\r\n                withCredentials: true\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                    setRefresh(!refresh)\r\n                    alert(\"post created\");\r\n\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ margin: \"1rem\" }}>\r\n\r\n            <h1> Dashboard Page </h1>\r\n\r\n\r\n            <Stack spacing={2} direction=\"column\">\r\n\r\n                <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    multiline\r\n                    rows={4}\r\n                    value={inputText}\r\n                    onChange={(e) => {\r\n                        setInputText(e.target.value)\r\n                    }}\r\n                    placeholder=\"What's in your mind\"\r\n                /> <br />\r\n                <Button variant=\"contained\" onClick={submit}>Post</Button>\r\n\r\n            </Stack>\r\n\r\n            <br />\r\n\r\n            {posts.map((eachPost) => (\r\n                <Post name={eachPost.name} email={eachPost.email} text={eachPost.postText} />\r\n            ))}\r\n\r\n            <br />\r\n\r\n            {(isMore) ? <Button onClick={loadMore}>Load More</Button> : null}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import './App.css';\nimport { baseUrl } from \"./server\"\nimport axios from 'axios';\nimport { useState, useEffect, useRef } from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\n\n\n\nimport Login from \"./components/login/index\"\nimport Signup from \"./components/signup/index\"\nimport Splash from \"./components/Splash/splash\"\nimport Dashboard from \"./components/profile/index\"\nimport { GlobalContext } from './context/Context';\nimport { useContext } from \"react\";\n\n\nfunction App() {\n\n  let history = useHistory();\n  let { state, dispatch } = useContext(GlobalContext);\n\n  useEffect(() => {\n\n    axios.get(`${baseUrl}/api/v1/profile`, {\n      withCredentials: true\n    })\n      .then((res) => {\n        console.log(\"res: \", res.data);\n\n        if (res.data.email) {\n\n          dispatch({\n            type: \"USER_LOGIN\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              _id: res.data._id,\n            }\n          })\n        } else {\n          dispatch({ type: \"USER_LOGOUT\" })\n        }\n      }).catch((e) => {\n        dispatch({ type: \"USER_LOGOUT\" })\n      })\n\n    return () => {\n    };\n  }, []);\n\n\n  // clear state\n\n\n  return (\n    <>\n\n    {(state?.user?.email)?\n      <Navbar className=\"bgcolor1\" expand=\"lg\">\n      <Container>\n          <Navbar.Brand href=\"#home\">React Login project</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => { history.push(\"/\") }}>Dashboard</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      :\n      <Navbar className=\"bgcolor1\" expand=\"lg\">\n      <Container>\n          <Navbar.Brand href=\"#home\">React Login project</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => { history.push(\"/\") }}>Login</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/signup\") }}>Signup</Nav.Link>\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      \n      }\n\n\n\n      {(state.user === undefined) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Splash />\n          </Route>\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        : null}\n\n      {(state.user === null) ?\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n\n          {/* <Redirect to=\"/\" /> */}\n        </Switch> : null\n      }\n\n      {(state.user) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboard />\n          </Route>\n\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        : null}\n\n\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport ContextProvider from \"./context/Context\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}