{"version":3,"sources":["logo.svg","server.js","context/Reducer.js","context/Context.js","components/login/index.jsx","components/signup/index.jsx","components/profile/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","reducer","state","action","type","payload","name","email","_id","user","console","log","darkTheme","GlobalContext","createContext","data","ContextProvider","children","useReducer","dispatch","Provider","value","validationSchema","yup","required","password","min","max","Login","history","useHistory","useContext","formik","useFormik","initialValues","onSubmit","values","axios","post","withCredentials","then","res","push","style","margin","handleSubmit","Box","sx","flexGrow","Grid","container","spacing","item","md","xs","TextField","fullWidth","color","id","label","variant","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","address","phoneNumber","Signup","genderValue","document","querySelector","gender","Number","result","alert","catch","err","FormControl","component","FormLabel","textAlign","RadioGroup","defaultValue","FormControlLabel","control","Radio","Home","useState","profile","setProfile","useEffect","get","JSON","stringify","onClick","App","Navbar","className","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8LAAe,I,sGCCFA,EAAqD,cAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GAD/C,wBAC0E,G,gCCDzEC,EAAU,SAACC,EAAOC,GAC3B,OAAQA,EAAOC,MAEb,IAAK,aACH,OACED,EAAOE,QAAQC,MACfH,EAAOE,QAAQE,OACfJ,EAAOE,QAAQG,IAER,2BAAKN,GAAZ,IAAmBO,KAAMN,EAAOE,WAGhCK,QAAQC,IAAR,uCACOT,GAGX,IAAK,cACH,OAAO,2BAAKA,GAAZ,IAAmBO,KAAM,KAE3B,IAAK,eACH,OAAO,2BAAKP,GAAZ,IAAmBU,WAAYV,EAAMU,YAIvC,QACE,OAAOV,I,OCtBFW,EAAgBC,wBAAc,iBACvCC,EAAO,CACTH,WAAW,EACXH,KAAM,IAGO,SAASO,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SACxC,EAA0BC,qBAAWjB,EAASc,GAA9C,mBAAOb,EAAP,KAAciB,EAAd,KAEA,OACE,cAACN,EAAcO,SAAf,CAAwBC,MAAO,CAAEnB,QAAOiB,YAAxC,SACGF,ICIP,IAAMK,EAAmBC,IAAW,CAClChB,MAAOgB,IACG,oBACPhB,MAAM,uBACNiB,SAAS,qBACZC,SAAUF,IACA,uBACPG,IAAI,EAAG,qDACPC,IAAI,GAAI,mBACRH,SAAS,0BAoHCI,MAjHf,WACE,IAAIC,EAAUC,cAEd,EAA0BC,qBAAWlB,GAAxBM,GAAb,EAAMjB,MAAN,EAAaiB,UAEPa,EAASC,YAAU,CACvBX,iBAAkBA,EAClBY,cAAe,CACb3B,MAAO,GACPkB,SAAU,IAEZU,SAAU,SAACC,GACT1B,QAAQC,IAAI,WAAYyB,GAExBC,IAAMC,KAAN,UAAc1C,EAAd,iBAAsC,CACpCW,MAAO6B,EAAO7B,MACdkB,SAAUW,EAAOX,UAChB,CACDc,iBAAiB,IAEhBC,MAAK,SAACC,GACL/B,QAAQC,IAAI,QAAS8B,EAAI1B,MAErB0B,EAAI1B,KAAKR,QAEXY,EAAS,CACPf,KAAM,aACNC,QAAS,CACPC,KAAMmC,EAAI1B,KAAKT,KACfC,MAAOkC,EAAI1B,KAAKR,MAChBC,IAAKiC,EAAI1B,KAAKP,OAGlBqB,EAAQa,KAAK,YAWvB,OACE,sBAAKC,MAAO,CAAEC,OAAQ,QAAtB,UACE,4CAEA,sBAAMT,SAAUH,EAAOa,aAAvB,SAEE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACE,cAACE,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNC,GAAG,iBACHC,MAAM,QACNC,QAAQ,WAERtD,KAAK,QACLe,MAAOW,EAAOI,OAAO7B,MACrBsD,SAAU7B,EAAO8B,aAEjBC,MAAO/B,EAAOgC,QAAQzD,OAAS0D,QAAQjC,EAAOkC,OAAO3D,OACrD4D,WAAYnC,EAAOgC,QAAQzD,OAASyB,EAAOkC,OAAO3D,UAGtD,cAAC0C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACE,cAACE,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNC,GAAG,eACHC,MAAM,WACNC,QAAQ,WACRxD,KAAK,WAELE,KAAK,WACLe,MAAOW,EAAOI,OAAOX,SACrBoC,SAAU7B,EAAO8B,aAEjBC,MAAO/B,EAAOgC,QAAQvC,UAAYwC,QAAQjC,EAAOkC,OAAOzC,UACxD0C,WAAYnC,EAAOgC,QAAQvC,UAAYO,EAAOkC,OAAOzC,aAGzD,cAACwB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,IAGvB,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACE,cAACe,EAAA,EAAD,CAAQZ,WAAS,EAACI,QAAQ,YAAYH,MAAM,UAAUrD,KAAK,SAA3D,qBAEF,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,e,6CC/G7B/B,EAAmBC,IAAW,CAChCjB,KAAMiB,IACM,mBACPC,SAAS,oBACdjB,MAAOgB,IACK,oBACPhB,MAAM,uBACNiB,SAAS,qBACdC,SAAUF,IACE,uBACPG,IAAI,EAAG,qDACPC,IAAI,GAAI,mBACRH,SAAS,wBACd6C,QAAS9C,IACG,sBACPC,SAAS,uBACd8C,YAAa/C,IACD,2BACPG,IAAI,GAAI,2CACRF,SAAS,8BA8MH+C,MA3Mf,WAEI,IAAI1C,EAAUC,cAERE,EAASC,YAAU,CACrBC,cAAe,CACX5B,KAAM,GACNC,MAAO,GACP+D,YAAa,GACb7C,SAAU,GACV4C,QAAS,IAEb/C,iBAAkBA,EAClBa,SAAU,SAACC,GACP,IAAMoC,EAAcC,SAASC,cACzB,gCACFrD,MACFgB,IACKC,KADL,UACa1C,EADb,kBACsC,CAC9BU,KAAM8B,EAAO9B,KACbC,MAAO6B,EAAO7B,MACdoE,OAAQH,EACRF,YAAaM,OAAOxC,EAAOkC,aAC3B7C,SAAUW,EAAOX,SACjB4C,QAASjC,EAAOiC,UAEnB7B,MAAK,SAACqC,GACHC,MAAM,uBACNjD,EAAQa,KAAK,aAEhBqC,OAAM,SAACC,UAMpB,OACI,sBAAKrC,MAAO,CAAEC,OAAQ,QAAtB,UACI,6CAEA,sBAAMT,SAAUH,EAAOa,aAAvB,SACI,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,UACNC,GAAG,iBACHC,MAAM,YACNC,QAAQ,WAERtD,KAAK,OACLe,MAAOW,EAAOI,OAAO9B,KACrBuD,SAAU7B,EAAO8B,aAEjBC,MAAO/B,EAAOgC,QAAQ1D,MAAQ2D,QAAQjC,EAAOkC,OAAO5D,MACpD6D,WAAYnC,EAAOgC,QAAQ1D,MAAQ0B,EAAOkC,OAAO5D,SAGzD,cAAC2C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,UACNC,GAAG,iBACHC,MAAM,QACNC,QAAQ,WAERtD,KAAK,QACLe,MAAOW,EAAOI,OAAO7B,MACrBsD,SAAU7B,EAAO8B,aAEjBC,MAAO/B,EAAOgC,QAAQzD,OAAS0D,QAAQjC,EAAOkC,OAAO3D,OACrD4D,WAAYnC,EAAOgC,QAAQzD,OAASyB,EAAOkC,OAAO3D,UAG1D,cAAC0C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,UACNC,GAAG,eACHC,MAAM,WACNC,QAAQ,WACRxD,KAAK,WAELE,KAAK,WACLe,MAAOW,EAAOI,OAAOX,SACrBoC,SAAU7B,EAAO8B,aAEjBC,MAAO/B,EAAOgC,QAAQvC,UAAYwC,QAAQjC,EAAOkC,OAAOzC,UACxD0C,WAAYnC,EAAOgC,QAAQvC,UAAYO,EAAOkC,OAAOzC,aAG7D,cAACwB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,UACNC,GAAG,eACHC,MAAM,UACNC,QAAQ,WACRxD,KAAK,UAELE,KAAK,UACLe,MAAOW,EAAOI,OAAOiC,QACrBR,SAAU7B,EAAO8B,aAEjBC,MAAO/B,EAAOgC,QAAQK,SAAWJ,QAAQjC,EAAOkC,OAAOG,SACvDF,WAAYnC,EAAOgC,QAAQK,SAAWrC,EAAOkC,OAAOG,YAG5D,cAACpB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlD,KAAK,cACLqD,MAAM,eACNC,QAAQ,WACRvC,MAAOW,EAAOI,OAAOkC,YACrBT,SAAU7B,EAAO8B,aACjBC,MACI/B,EAAOgC,QAAQM,aAAeL,QAAQjC,EAAOkC,OAAOI,aAExDH,WACInC,EAAOgC,QAAQM,aAAetC,EAAOkC,OAAOI,gBAIxD,cAACrB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,eAAC4B,EAAA,EAAD,CAAaC,UAAU,WAAvB,UACI,cAACC,EAAA,EAAD,CAAWD,UAAU,SAASvC,MAAO,CAAEyC,UAAW,QAAlD,oBAGA,eAACC,EAAA,EAAD,CACI,aAAW,SACXC,aAAa,OACbhF,KAAK,eAHT,UAKI,cAACiF,EAAA,EAAD,CACIjF,KAAK,SACLe,MAAM,OACNmE,QAAS,cAACC,EAAA,EAAD,IACT9B,MAAM,SAEV,cAAC4B,EAAA,EAAD,CACIjF,KAAK,SACLe,MAAM,SACNmE,QAAS,cAACC,EAAA,EAAD,IACT9B,MAAM,mBAKtB,cAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,IAGvB,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACe,EAAA,EAAD,CAAQZ,WAAS,EAACI,QAAQ,YAAYxD,KAAK,SAA3C,sBAEJ,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,eCrLhCqC,MAjDf,WAEI,MAA4B3D,qBAAWlB,GAAxBM,GAAf,EAAQjB,MAAR,EAAeiB,UAEf,EAA8BwE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,qBAAU,WAENzD,IAAM0D,IAAN,UAAanG,EAAb,mBAAuC,CACnC2C,iBAAiB,IAEhBC,MAAK,SAACC,GACH/B,QAAQC,IAAI,YAAa8B,EAAI1B,MAC7B8E,EAAWpD,EAAI1B,WAExB,IAIC,qCACI,gDACA,4BAAIiF,KAAKC,UAAUL,KAEnB,wBAAQM,QAAS,WACb7D,IAAM0D,IAAN,UAAanG,EAAb,mBAAuC,CACnC2C,iBAAiB,IAEhBC,MAAK,SAACC,GACH/B,QAAQC,IAAI,YAAa8B,EAAI1B,MAC7B8E,EAAWpD,EAAI1B,UAN3B,yBAUA,wBAAQmF,QAAS,WACb7D,IAAMC,KAAN,UAAc1C,EAAd,kBAAsC,GAAI,CACtC2C,iBAAiB,IAEhBC,MAAK,SAACC,GACH/B,QAAQC,IAAI,YAAa8B,EAAI1B,MAE7BI,EAAS,CACLf,KAAM,oBARtB,wBCwBG+F,MA3Cf,WAEE,IAAItE,EAAUC,cAKd,OACE,qCACE,cAACsE,EAAA,EAAD,CAAQC,UAAU,WAAWC,OAAO,KAApC,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,oBACA,cAACL,EAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBjD,GAAG,mBAApB,SACE,eAACkD,EAAA,EAAD,CAAKP,UAAU,UAAf,UACE,cAACO,EAAA,EAAIC,KAAL,CAAUX,QAAS,WAAQrE,EAAQa,KAAK,YAAxC,oBACA,cAACkE,EAAA,EAAIC,KAAL,CAAUX,QAAS,WAAQrE,EAAQa,KAAK,WAAxC,mBACA,cAACkE,EAAA,EAAIC,KAAL,CAAUX,QAAS,WAAQrE,EAAQa,KAAK,MAAxC,iCAOR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoE,KAAK,SAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,EAAD,aC1CKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCKdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1G,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINyD,SAASkD,eAAe,SAM1BX,M","file":"static/js/main.c468028b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n  \r\n      case \"USER_LOGIN\": {\r\n        if (\r\n          action.payload.name &&\r\n          action.payload.email &&\r\n          action.payload._id) {\r\n  \r\n          return { ...state, user: action.payload }\r\n  \r\n        } else {\r\n          console.log(`invalid data in USER_LOGIN reducer `);\r\n          return state;\r\n        }\r\n      }\r\n      case \"USER_LOGOUT\": {\r\n        return { ...state, user: {} } // set this to null on purpose, do not change\r\n      }\r\n      case \"TOGGLE_THEME\": {\r\n        return { ...state, darkTheme: !state.darkTheme } // set this to null on purpose, do not change\r\n      }\r\n  \r\n  \r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n  }","import React, { createContext, useReducer } from 'react'\r\nimport { reducer } from './Reducer';\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n  darkTheme: true,\r\n  user: {}\r\n}\r\n\r\nexport default function ContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, data)\r\n  \r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","import axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../server\"\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport { GlobalContext } from '../../context/Context';\r\nimport { useContext } from \"react\";\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: (values) => {\r\n      console.log(\"values: \", values)\r\n\r\n      axios.post(`${baseUrl}/api/v1/login`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      }, {\r\n        withCredentials: true\r\n      })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n\r\n          if (res.data.email) {\r\n\r\n            dispatch({\r\n              type: \"USER_LOGIN\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                _id: res.data._id\r\n              }\r\n            })\r\n            history.push(\"/\")\r\n          }\r\n\r\n\r\n        })\r\n\r\n    }\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem\" }}>\r\n      <h1>Login page</h1>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item md={3}>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} md={6} >\r\n              <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n\r\n                name=\"email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n              />\r\n            </Grid>\r\n            <Grid item md={3}>\r\n\r\n            </Grid>\r\n            <Grid item md={3}>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} md={6} >\r\n              <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                id=\"filled-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n\r\n                name=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n              />\r\n            </Grid>\r\n            <Grid item md={3}>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} md={5}>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n            </Grid>\r\n            <Grid item xs={12} md={5}>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"../../server\";\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n    address: yup\r\n        .string('Enter your Address')\r\n        .required('Address is required'),\r\n    phoneNumber: yup\r\n        .string(\"Enter your phone number\")\r\n        .min(10, \"Phone number should be 10 integers long\")\r\n        .required(\"Phone number is required\"),\r\n});\r\n\r\nfunction Signup() {\r\n\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            password: \"\",\r\n            address: \"\",\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            const genderValue = document.querySelector(\r\n                'input[name=\"gender\"]:checked'\r\n            ).value;\r\n            axios\r\n                .post(`${baseUrl}/api/v1/signup`, {\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    gender: genderValue,\r\n                    phoneNumber: Number(values.phoneNumber),\r\n                    password: values.password,\r\n                    address: values.address,\r\n                })\r\n                .then((result) => {\r\n                    alert('SIGNUP SUCCESSFULLY');\r\n                    history.push('/login');\r\n                })\r\n                .catch((err) => {\r\n                    // console.log(err);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div style={{ margin: \"1rem\" }}>\r\n            <h1>Signup page</h1>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Full Name\"\r\n                                variant=\"standard\"\r\n\r\n                                name=\"name\"\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText={formik.touched.name && formik.errors.name}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Email\"\r\n                                variant=\"standard\"\r\n\r\n                                name=\"email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"filled-basic\"\r\n                                label=\"Password\"\r\n                                variant=\"standard\"\r\n                                type=\"password\"\r\n\r\n                                name=\"password\"\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText={formik.touched.password && formik.errors.password}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"filled-basic\"\r\n                                label=\"Address\"\r\n                                variant=\"standard\"\r\n                                type=\"address\"\r\n\r\n                                name=\"address\"\r\n                                value={formik.values.address}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.address && Boolean(formik.errors.address)}\r\n                                helperText={formik.touched.address && formik.errors.address}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <TextField\r\n                                fullWidth\r\n                                name=\"phoneNumber\"\r\n                                label=\"Phone Number\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.phoneNumber}\r\n                                onChange={formik.handleChange}\r\n                                error={\r\n                                    formik.touched.phoneNumber && Boolean(formik.errors.phoneNumber)\r\n                                }\r\n                                helperText={\r\n                                    formik.touched.phoneNumber && formik.errors.phoneNumber\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\" style={{ textAlign: \"left\" }}>\r\n                                    Gender\r\n                                </FormLabel>\r\n                                <RadioGroup\r\n                                    aria-label=\"gender\"\r\n                                    defaultValue=\"male\"\r\n                                    name=\"genderParent\"\r\n                                >\r\n                                    <FormControlLabel\r\n                                        name=\"gender\"\r\n                                        value=\"male\"\r\n                                        control={<Radio />}\r\n                                        label=\"Male\"\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        name=\"gender\"\r\n                                        value=\"female\"\r\n                                        control={<Radio />}\r\n                                        label=\"Female\"\r\n                                    />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Button fullWidth variant=\"contained\" type=\"submit\">Signup</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Signup;\r\n\r\n\r\n{/* <Box sx={{ flexGrow: 1 }}>\r\n    <Grid container spacing={5}>\r\n        <Grid item md={2}>\r\n\r\n        </Grid>\r\n        <Grid item xs={12} md={8} >\r\n            <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n\r\n                name=\"email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n        </Grid>\r\n        <Grid item md={2}>\r\n\r\n        </Grid>\r\n        <Grid item md={2}>\r\n\r\n        </Grid>\r\n        <Grid item xs={12} md={8} >\r\n            <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                id=\"filled-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n\r\n                name=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n\r\n        </Grid>\r\n        <Grid item xs={12} md={2}>\r\n            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n\r\n        </Grid>\r\n    </Grid>\r\n</Box> */}","import axios from 'axios';\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport { baseUrl } from \"./../../server\"\r\nimport { GlobalContext } from './../../context/Context';\r\nimport { useContext } from \"react\";\r\n\r\nfunction Home() {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const [profile, setProfile] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`${baseUrl}/api/v1/profile`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                setProfile(res.data)\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1> Profile Page </h1>\r\n            <p>{JSON.stringify(profile)}</p>\r\n\r\n            <button onClick={() => {\r\n                axios.get(`${baseUrl}/api/v1/profile`, {\r\n                    withCredentials: true\r\n                })\r\n                    .then((res) => {\r\n                        console.log(\"res +++: \", res.data);\r\n                        setProfile(res.data)\r\n                    })\r\n            }} >get profile</button>\r\n\r\n            <button onClick={() => {\r\n                axios.post(`${baseUrl}/api/v1/logout`,{}, {\r\n                    withCredentials: true\r\n                })\r\n                    .then((res) => {\r\n                        console.log(\"res +++: \", res.data);\r\n\r\n                        dispatch({\r\n                            type: \"USER_LOGOUT\"\r\n                        })\r\n                    })\r\n            }} >Logout</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\n\n\n\nimport Login from \"./components/login/index\"\nimport Signup from \"./components/signup/index\"\nimport Dashboard from \"./components/profile/index\"\n\n\nfunction App() {\n\n  let history = useHistory();\n\n  // clear state\n\n\n  return (\n    <>\n      <Navbar className=\"bgcolor1\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">My App</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => { history.push(\"/signup\") }}>Signup</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/login\") }}>Login</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/\") }}>Dashboard</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n\n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route>\n\n      </Switch>\n\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport ContextProvider from \"./context/Context\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}