{"version":3,"sources":["server.js","context/Reducer.js","context/Context.js","components/login/index.jsx","components/signup/index.jsx","img/splash.png","components/Splash/splash.js","components/profile/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","reducer","state","action","type","payload","name","email","_id","user","console","log","darkTheme","GlobalContext","createContext","data","undefined","ContextProvider","children","useReducer","dispatch","Provider","value","validationSchema","yup","required","password","min","max","Weather","useHistory","useContext","formik","useFormik","initialValues","onSubmit","values","axios","post","withCredentials","then","res","address","phoneNumber","gender","style","margin","handleSubmit","Box","sx","flexGrow","Grid","container","spacing","item","md","xs","TextField","fullWidth","color","id","label","variant","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","history","genderValue","document","querySelector","Number","alert","push","FormControl","component","FormLabel","textAlign","RadioGroup","defaultValue","FormControlLabel","control","Radio","Splash","backgroundColor","width","height","position","bottom","src","img","alt","onSubmitFunction","title","description","response","localStorage","setItem","catch","Home","useState","profile","setProfile","useEffect","get","todo","settodo","Title","getItem","err","Card","padding","minWidth","CardContent","Typography","onClick","map","eachData","App","e","Navbar","className","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","exact","path","Login","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.afb3d85c.chunk.js","sourcesContent":["const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case \"USER_LOGIN\": {\r\n      if (\r\n        action.payload.name &&\r\n        action.payload.email &&\r\n        action.payload._id ) {\r\n\r\n        return { ...state, user: action.payload }\r\n\r\n      } else {\r\n        console.log(`invalid data in USER_LOGIN reducer `);\r\n        return state;\r\n      }\r\n    }\r\n    case \"USER_LOGOUT\": {\r\n      return { ...state, user: null } // set this to null on purpose, do not change\r\n    }\r\n    case \"TOGGLE_THEME\": {\r\n      return { ...state, darkTheme: !state.darkTheme } // set this to null on purpose, do not change\r\n    }\r\n\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport { reducer } from './Reducer';\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n  darkTheme: true,\r\n  user: undefined\r\n}\r\n\r\nexport default function ContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, data)\r\n  \r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","import { useState, useEffect, useRef } from \"react\"\r\nimport axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../server\"\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport { GlobalContext } from '../../context/Context';\r\nimport { useContext } from \"react\";\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction Weather() {\r\n  let history = useHistory();\r\n\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values)\r\n\r\n      axios.post(`${baseUrl}/api/v1/login`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      }, {\r\n        withCredentials: true\r\n      })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n\r\n          if (res.data.email) {\r\n\r\n            dispatch({\r\n              type: \"USER_LOGIN\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                _id: res.data._id,\r\n                address: res.data.address,\r\n                phoneNumber: res.data.phoneNumber,\r\n                gender: res.data.gender,\r\n              }\r\n            })\r\n            // history.push(\"/\")\r\n          }\r\n\r\n\r\n        })\r\n\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem\" }}>\r\n        <h1>Login page</h1>\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={6} >\r\n                <TextField\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  id=\"outlined-basic\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n\r\n                  name=\"email\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n              </Grid>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={6} >\r\n                <TextField\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  id=\"filled-basic\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n\r\n                  name=\"password\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n\r\n                  error={formik.touched.password && Boolean(formik.errors.password)}\r\n                  helperText={formik.touched.password && formik.errors.password}\r\n                />\r\n              </Grid>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={5}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={2}>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n              </Grid>\r\n              <Grid item xs={12} md={5}>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </form>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Weather;","import axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"../../server\";\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst validationSchema = yup.object({\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n    address: yup\r\n        .string('Enter your Address')\r\n        .required('Address is required'),\r\n    phoneNumber: yup\r\n        .string(\"Enter your phone number\")\r\n        .min(10, \"Phone number should be 10 integers long\")\r\n        .required(\"Phone number is required\"),\r\n});\r\n\r\nfunction Weather() {\r\n\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            password: \"\",\r\n            address: \"\",\r\n        },\r\n        onSubmit: function (values)  {\r\n            const genderValue = document.querySelector(\r\n                'input[name=\"gender\"]:checked'\r\n            ).value;\r\n            axios\r\n                .post(`${baseUrl}/api/v1/signup`, {\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    gender: genderValue,\r\n                    phoneNumber: Number(values.phoneNumber),\r\n                    password: values.password,\r\n                    address: values.address,\r\n                })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                    alert(\"Successfully Signed Up\")\r\n                    history.push(\"/\")\r\n\r\n                })\r\n               \r\n        },\r\n    });\r\n\r\n    return (\r\n        <div style={{ margin: \"1rem\" }}>\r\n        <h1>Signup page</h1>\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Full Name\"\r\n                            variant=\"standard\"\r\n\r\n                            name=\"name\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.name && Boolean(formik.errors.name)}\r\n                            helperText={formik.touched.name && formik.errors.name}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Email\"\r\n                            variant=\"standard\"\r\n\r\n                            name=\"email\"\r\n                            value={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.email && Boolean(formik.errors.email)}\r\n                            helperText={formik.touched.email && formik.errors.email}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"filled-basic\"\r\n                            label=\"Password\"\r\n                            variant=\"standard\"\r\n                            type=\"password\"\r\n\r\n                            name=\"password\"\r\n                            value={formik.values.password}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.password && Boolean(formik.errors.password)}\r\n                            helperText={formik.touched.password && formik.errors.password}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"filled-basic\"\r\n                            label=\"Address\"\r\n                            variant=\"standard\"\r\n                            type=\"address\"\r\n\r\n                            name=\"address\"\r\n                            value={formik.values.address}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.address && Boolean(formik.errors.address)}\r\n                            helperText={formik.touched.address && formik.errors.address}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            name=\"phoneNumber\"\r\n                            label=\"Phone Number\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.phoneNumber}\r\n                            onChange={formik.handleChange}\r\n                            error={\r\n                                formik.touched.phoneNumber && Boolean(formik.errors.phoneNumber)\r\n                            }\r\n                            helperText={\r\n                                formik.touched.phoneNumber && formik.errors.phoneNumber\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\" style={{ textAlign: \"left\" }}>\r\n                                Gender\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                                aria-label=\"gender\"\r\n                                defaultValue=\"male\"\r\n                                name=\"genderParent\"\r\n                            >\r\n                                <FormControlLabel\r\n                                    name=\"gender\"\r\n                                    value=\"male\"\r\n                                    control={<Radio />}\r\n                                    label=\"Male\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    name=\"gender\"\r\n                                    value=\"female\"\r\n                                    control={<Radio />}\r\n                                    label=\"Female\"\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Button fullWidth variant=\"contained\" type=\"submit\">Signup</Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n        </form>\r\n\r\n    </div>\r\n    );\r\n}\r\nexport default Weather;","export default __webpack_public_path__ + \"static/media/splash.257ba1d2.png\";","import img from \"./../../img/splash.png\"\r\n\r\n\r\nfunction Splash() {\r\n\r\n    return (\r\n        <>\r\n            <div style={{backgroundColor: \"#181415\", width: \"100%\", height: \"100vh\"}}>\r\n\r\n                <img style={{\r\n                    width: \"100%\",\r\n                    position: \"fixed\",\r\n                    bottom: \"0px\"\r\n                }}\r\n                    src={img} alt=\"\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Splash;","import axios from 'axios';\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport { baseUrl } from \"./../../server\"\r\nimport { GlobalContext } from './../../context/Context';\r\nimport { useContext } from \"react\";\r\nimport * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport {\r\n    BrowserRouter as Router,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction onSubmitFunction(values) {\r\n    console.log(\"values: \", values)\r\n    axios.post(`${baseUrl}/api/v1/create`, {\r\n        title: values.title,\r\n        description: values.description\r\n    }, {\r\n        withCredentials: true\r\n    })\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            const title = values.title;\r\n            localStorage.setItem('title', title)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n\r\nfunction Home() {\r\n    \r\n\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const [profile, setProfile] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`${baseUrl}/api/v1/profile`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                setProfile(res.data)\r\n\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: '',\r\n            description: '',\r\n        },\r\n        onSubmit: onSubmitFunction\r\n    });\r\n\r\n    const [todo, settodo] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const Title = localStorage.getItem('title')\r\n        axios.get(`${baseUrl}/api/v1/posts`, {\r\n            title: Title\r\n        })\r\n            .then((res) => {\r\n                let data = res.data\r\n                settodo(data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            })\r\n\r\n        return;\r\n    }, [todo]);\r\n\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"2rem\" }}>\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <Grid container spacing={5}>\r\n                        <Grid item md={4}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} >\r\n                            <Card style={{ padding: \"1rem\"}} sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h4\" component=\"div\">\r\n                                        {profile.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" component=\"div\">\r\n                                        {profile.email}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" component=\"div\">\r\n                                        {profile.address}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" component=\"div\">\r\n                                        {profile.phoneNumber}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" component=\"div\">\r\n                                        {profile.gender}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <Button variant=\"contained\" color=\"error\" onClick={() => {\r\n                                    axios.post(`${baseUrl}/api/v1/logout`, {}, {\r\n                                        withCredentials: true\r\n                                    })\r\n                                        .then((res) => {\r\n                                            console.log(\"res +++: \", res.data);\r\n                                            alert(\"Logging Out\")\r\n                                            dispatch({\r\n                                                type: \"USER_LOGOUT\"\r\n                                            })\r\n                                        })\r\n                                }} >Logout</Button>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item md={4}>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n            <div>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <Box sx={{ flexGrow: 1 }}>\r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={2} md={2}>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={8} md={8} >\r\n\r\n                                <TextField\r\n                                    fullWidth\r\n                                    color=\"primary\"\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Title\"\r\n                                    variant=\"standard\"\r\n\r\n                                    name=\"title\"\r\n                                    value={formik.values.title}\r\n                                    onChange={formik.handleChange}\r\n\r\n                                    error={formik.touched.title && Boolean(formik.errors.title)}\r\n                                    helperText={formik.touched.title && formik.errors.title}\r\n                                />\r\n\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2}>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2}>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={8} md={8} >\r\n\r\n\r\n                                <TextField\r\n                                    fullWidth\r\n                                    color=\"primary\"\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Description\"\r\n                                    variant=\"standard\"\r\n\r\n                                    name=\"description\"\r\n                                    value={formik.values.description}\r\n                                    onChange={formik.handleChange}\r\n\r\n                                    error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                    helperText={formik.touched.description && formik.errors.description}\r\n                                />\r\n\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2}>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2}>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={8} md={8}>\r\n                                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Insert Button</Button>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2}>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </form >\r\n\r\n                {\r\n                    todo.map(eachData => {\r\n                        return (\r\n                            <div style={{ margin: \"2rem\" }}>\r\n                                <Card sx={{ minWidth: 275 }}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h4\" component=\"div\">\r\n                                            {eachData.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"div\">\r\n                                            {eachData.description}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import './App.css';\nimport { baseUrl } from \"./server\"\nimport axios from 'axios';\nimport { useState, useEffect, useRef } from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\n\n\n\nimport Login from \"./components/login/index\"\nimport Signup from \"./components/signup/index\"\nimport Splash from \"./components/Splash/splash\"\nimport Dashboard from \"./components/profile/index\"\nimport { GlobalContext } from './context/Context';\nimport { useContext } from \"react\";\n\n\nfunction App() {\n\n  let history = useHistory();\n  let { state, dispatch } = useContext(GlobalContext);\n\n  useEffect(() => {\n\n    axios.get(`${baseUrl}/api/v1/profile`, {\n      withCredentials: true\n    })\n      .then((res) => {\n        console.log(\"res: \", res.data);\n\n        if (res.data.email) {\n\n          dispatch({\n            type: \"USER_LOGIN\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              _id: res.data._id,\n            }\n          })\n        } else {\n          dispatch({ type: \"USER_LOGOUT\" })\n        }\n      }).catch((e) => {\n        dispatch({ type: \"USER_LOGOUT\" })\n      })\n\n    return () => {\n    };\n  }, []);\n\n\n  // clear state\n\n\n  return (\n    <>\n      <Navbar className=\"bgcolor1\" expand=\"lg\">\n      <Container>\n          <Navbar.Brand href=\"#home\">React Login project</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => { history.push(\"/\") }}>Dashboard</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/\") }}>Login</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/signup\") }}>Signup</Nav.Link>\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n\n      {(state.user === undefined) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Splash />\n          </Route>\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        : null}\n\n      {(state.user === null) ?\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n\n          {/* <Redirect to=\"/\" /> */}\n        </Switch> : null\n      }\n\n      {(state.user) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboard />\n          </Route>\n\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        : null}\n\n\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport ContextProvider from \"./context/Context\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}