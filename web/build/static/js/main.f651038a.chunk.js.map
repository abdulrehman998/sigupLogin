{"version":3,"sources":["server.js","context/Reducer.js","context/Context.js","components/login/index.jsx","components/signup/index.jsx","img/splash.png","components/Splash/splash.js","components/profile/post.jsx","img/cric.jpg","components/Scoreboard/index.jsx","components/profile/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","reducer","state","action","type","payload","name","email","_id","user","console","log","darkTheme","GlobalContext","createContext","data","undefined","ContextProvider","children","useReducer","dispatch","Provider","value","validationSchema","yup","required","password","min","max","Weather","useHistory","useContext","formik","useFormik","initialValues","onSubmit","values","axios","post","withCredentials","then","res","address","phoneNumber","gender","style","margin","handleSubmit","Box","sx","flexGrow","Grid","container","spacing","item","md","xs","TextField","fullWidth","color","id","label","variant","onChange","handleChange","error","touched","Boolean","errors","helperText","history","genderValue","document","querySelector","Number","alert","push","FormControl","component","FormLabel","textAlign","RadioGroup","defaultValue","FormControlLabel","control","Radio","Splash","backgroundColor","width","height","position","bottom","src","img","alt","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","RecipeReviewCard","text","team1","team2","toss","overs","wickets","bat","timestamp","batter1","bowl","batter2","bowler","batter1runs","batter1balls","batter2balls","batter2runs","bowlerruns","bowlerwickets","target","React","Card","maxWidth","CardHeader","avatar","Avatar","title","subheader","CardContent","Typography","CardActions","disableSpacing","Scoreboard","useState","posts","setPosts","useEffect","get","socket","io","on","close","team1Text","team2Text","postText","wicketsText","oversText","batText","bowlText","batter1Text","batter2Text","bowlerText","batter1runsText","batter1ballsText","batter2runsText","batter2ballsText","bowlerwicketsText","bowlerrunsText","targetText","Dashboard","inputText","setInputText","setWicketsText","setOvers","setTeam1","setTeam2","setBat","setBowl","setBowler","setBatter1","setBatter2","setBatter1runs","setBatter1balls","setBatter2runs","setBatter2balls","setBowlerwickets","setBowlerruns","setTarget","refresh","setRefresh","e","onClick","App","catch","Navbar","className","Container","Brand","href","Toggle","Collapse","Nav","Link","Form","Button","exact","path","Login","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f651038a.chunk.js","sourcesContent":["const dev = \"http://localhost:5001\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case \"USER_LOGIN\": {\r\n      if (\r\n        action.payload.name &&\r\n        action.payload.email &&\r\n        action.payload._id ) {\r\n\r\n        return { ...state, user: action.payload }\r\n\r\n      } else {\r\n        console.log(`invalid data in USER_LOGIN reducer `);\r\n        return state;\r\n      }\r\n    }\r\n    case \"USER_LOGOUT\": {\r\n      return { ...state, user: null } // set this to null on purpose, do not change\r\n    }\r\n    case \"TOGGLE_THEME\": {\r\n      return { ...state, darkTheme: !state.darkTheme } // set this to null on purpose, do not change\r\n    }\r\n\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport { reducer } from './Reducer';\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n  darkTheme: true,\r\n  user: undefined\r\n}\r\n\r\nexport default function ContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, data)\r\n  \r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","import { useState, useEffect, useRef } from \"react\"\r\nimport axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../server\"\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport { GlobalContext } from '../../context/Context';\r\nimport { useContext } from \"react\";\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction Weather() {\r\n  let history = useHistory();\r\n\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values)\r\n\r\n      axios.post(`${baseUrl}/api/v1/login`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      }, {\r\n        withCredentials: true\r\n      })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n\r\n          if (res.data.email) {\r\n\r\n            dispatch({\r\n              type: \"USER_LOGIN\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                _id: res.data._id,\r\n                address: res.data.address,\r\n                phoneNumber: res.data.phoneNumber,\r\n                gender: res.data.gender,\r\n              }\r\n            })\r\n            // history.push(\"/\")\r\n          }\r\n\r\n\r\n        })\r\n\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem\" }}>\r\n        <h1>Login page</h1>\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={6} >\r\n                <TextField\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  id=\"outlined-basic\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n\r\n                  name=\"email\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n              </Grid>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={6} >\r\n                <TextField\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  id=\"filled-basic\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n\r\n                  name=\"password\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n\r\n                  error={formik.touched.password && Boolean(formik.errors.password)}\r\n                  helperText={formik.touched.password && formik.errors.password}\r\n                />\r\n              </Grid>\r\n              <Grid item md={3}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={5}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={2}>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n              </Grid>\r\n              <Grid item xs={12} md={5}>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </form>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Weather;","import axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"../../server\";\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst validationSchema = yup.object({\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n    address: yup\r\n        .string('Enter your Address')\r\n        .required('Address is required'),\r\n    phoneNumber: yup\r\n        .string(\"Enter your phone number\")\r\n        .min(10, \"Phone number should be 10 integers long\")\r\n        .required(\"Phone number is required\"),\r\n});\r\n\r\nfunction Weather() {\r\n\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            password: \"\",\r\n            address: \"\",\r\n        },\r\n        onSubmit: function (values)  {\r\n            const genderValue = document.querySelector(\r\n                'input[name=\"gender\"]:checked'\r\n            ).value;\r\n            axios\r\n                .post(`${baseUrl}/api/v1/signup`, {\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    gender: genderValue,\r\n                    phoneNumber: Number(values.phoneNumber),\r\n                    password: values.password,\r\n                    address: values.address,\r\n                })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                    alert(\"Successfully Signed Up\")\r\n                    history.push(\"/\")\r\n\r\n                })\r\n               \r\n        },\r\n    });\r\n\r\n    return (\r\n        <div style={{ margin: \"1rem\" }}>\r\n        <h1>Signup page</h1>\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Full Name\"\r\n                            variant=\"standard\"\r\n\r\n                            name=\"name\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.name && Boolean(formik.errors.name)}\r\n                            helperText={formik.touched.name && formik.errors.name}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Email\"\r\n                            variant=\"standard\"\r\n\r\n                            name=\"email\"\r\n                            value={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.email && Boolean(formik.errors.email)}\r\n                            helperText={formik.touched.email && formik.errors.email}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"filled-basic\"\r\n                            label=\"Password\"\r\n                            variant=\"standard\"\r\n                            type=\"password\"\r\n\r\n                            name=\"password\"\r\n                            value={formik.values.password}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.password && Boolean(formik.errors.password)}\r\n                            helperText={formik.touched.password && formik.errors.password}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"filled-basic\"\r\n                            label=\"Address\"\r\n                            variant=\"standard\"\r\n                            type=\"address\"\r\n\r\n                            name=\"address\"\r\n                            value={formik.values.address}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.address && Boolean(formik.errors.address)}\r\n                            helperText={formik.touched.address && formik.errors.address}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <TextField\r\n                            fullWidth\r\n                            name=\"phoneNumber\"\r\n                            label=\"Phone Number\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.phoneNumber}\r\n                            onChange={formik.handleChange}\r\n                            error={\r\n                                formik.touched.phoneNumber && Boolean(formik.errors.phoneNumber)\r\n                            }\r\n                            helperText={\r\n                                formik.touched.phoneNumber && formik.errors.phoneNumber\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} >\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\" style={{ textAlign: \"left\" }}>\r\n                                Gender\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                                aria-label=\"gender\"\r\n                                defaultValue=\"male\"\r\n                                name=\"genderParent\"\r\n                            >\r\n                                <FormControlLabel\r\n                                    name=\"\"\r\n                                    value=\"male\"\r\n                                    control={<Radio />}\r\n                                    label=\"Male\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    name=\"gender\"\r\n                                    value=\"female\"\r\n                                    control={<Radio />}\r\n                                    label=\"Female\"\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Button fullWidth variant=\"contained\" type=\"submit\">Signup</Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n        </form>\r\n\r\n    </div>\r\n    );\r\n}\r\nexport default Weather;","export default __webpack_public_path__ + \"static/media/splash.257ba1d2.png\";","import img from \"./../../img/splash.png\"\r\n\r\n\r\nfunction Splash() {\r\n\r\n    return (\r\n        <>\r\n            <div style={{backgroundColor: \"#181415\", width: \"100%\", height: \"100vh\"}}>\r\n\r\n                <img style={{\r\n                    width: \"100%\",\r\n                    position: \"fixed\",\r\n                    bottom: \"0px\"\r\n                }}\r\n                    src={img} alt=\"\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Splash;","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n    \r\n\r\n\r\nexport default function RecipeReviewCard(props) {\r\n    const { text, team1, team2, toss, overs, wickets, email, name, timestamp, bat, bowl, batter1, batter2, bowler, batter1runs, batter1balls, batter2balls, batter2runs, bowlerruns, bowlerwickets, target } = props;\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <Card sx={{ maxWidth: 1600 }}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\">\r\n                        <img src=\"https://upload.wikimedia.org/wikipedia/en/1/10/ICC_Men%27s_T20_World_Cup_2021_logo.svg\" alt=\"\" width=\"30\" />\r\n                    </Avatar>\r\n                }\r\n                title=\"ICC Men's T20 World Cup 2021\"\r\n                subheader=\"Live\"\r\n                \r\n            />\r\n            \r\n            <CardContent  style={{ textAlign: \"center\" }}>\r\n            <Typography variant=\"h2\" color=\"text.secondary\">\r\n                    {team1} VS {team2}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    {team1} won the Toss and choose to {toss} \r\n                </Typography>\r\n                <Typography variant=\"h4\">\r\n                   {bat} {text}/ {wickets}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    {batter1} {batter1runs} ({batter1balls}) {batter2} {batter2runs} ({batter2balls})\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                    {overs} Overs\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    {bowler} {bowlerwickets}/({bowlerruns})\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n            </CardActions>\r\n            \r\n        </Card>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/cric.2ce823a5.jpg\";","import axios from 'axios';\r\nimport { useState, useEffect } from \"react\"\r\nimport { baseUrl } from \"./../../server\"\r\nimport Post from \"../profile/post\"\r\nimport io from 'socket.io-client';\r\nimport img from \"./../../img/cric.jpg\"\r\nimport { grey } from '@mui/material/colors';\r\n\r\n\r\n\r\nfunction Scoreboard() {\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/posts?page=0`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data[0]);\r\n                let data = res.data[0];\r\n                setPosts(data);\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const socket = io(\"https://loginsignup1.herokuapp.com/\");\r\n\r\n        socket.on(\"connect\", () => {\r\n            console.log(\"Connected to server\")\r\n        })\r\n        socket.on(\"disconnect\", () => {\r\n            console.log(\"Disconnected to server\")\r\n        })\r\n        socket.on(\"POSTS\", (data) => {\r\n            console.log(data);\r\n            setPosts(data)\r\n        })\r\n        return () => {\r\n            socket.close();\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{backgroundColor: \"#F0F2F5\", width: \"100%\", height: \"90vh\"}}>\r\n                <div style={{ margin: \"1rem\" }}>\r\n\r\n                    <br />\r\n\r\n                    <Post name={posts.name} email={posts.email} team1={posts.team1Text} team2={posts.team2Text} toss={posts.gender} text={posts.postText} wickets={posts.wicketsText} overs={posts.oversText} bat={posts.batText}\r\n                     bowl={posts.bowlText} batter1={posts.batter1Text} batter2={posts.batter2Text} bowler={posts.bowlerText}\r\n                    batter1runs={posts.batter1runsText} batter1balls={posts.batter1ballsText} batter2runs={posts.batter2runsText} batter2balls={posts.batter2ballsText} \r\n                    bowlerwickets={posts.bowlerwicketsText}  bowlerruns={posts.bowlerrunsText} target={posts.targetText} />\r\n\r\n                    <br />\r\n\r\n                    {/* {(isMore) ? <Button onClick={loadMore}>Load More</Button> : null} */}\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Scoreboard;\r\n\r\n\r\n","import axios from 'axios';\r\nimport { useState, useEffect } from \"react\"\r\nimport { baseUrl } from \"./../../server\"\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [wicketsText, setWicketsText] = useState(\"\");\r\n    const [overs, setOvers] = useState(\"\");\r\n    const [team1, setTeam1] = useState(\"\");\r\n    const [team2, setTeam2] = useState(\"\");\r\n    const [bat, setBat] = useState(\"\");\r\n    const [bowl, setBowl] = useState(\"\");\r\n    const [bowler, setBowler] = useState(\"\");\r\n    const [batter1, setBatter1] = useState(\"\");\r\n    const [batter2, setBatter2] = useState(\"\");\r\n    const [batter1runs, setBatter1runs] = useState(\"\");\r\n    const [batter1balls, setBatter1balls] = useState(\"\");\r\n    const [batter2runs, setBatter2runs] = useState(\"\")\r\n    const [batter2balls, setBatter2balls] = useState(\"\")\r\n    const [bowlerwickets, setBowlerwickets] = useState(\"\");\r\n    const [bowlerruns, setBowlerruns] = useState(\"\");\r\n    const [target, setTarget] = useState(\"\");\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\nconsole.log(batter2runs)\r\n\r\n\r\n    const submit = () => {\r\n        if (inputText !== \"\") {\r\n            const genderValue = document.querySelector(\r\n                'input[name=\"gender\"]:checked'\r\n            ).value;\r\n            axios.post(`${baseUrl}/api/v1/post`, {\r\n                postText: inputText,\r\n                wicketsText: wicketsText,\r\n                oversText: overs,\r\n                team1Text: team1,\r\n                team2Text: team2,\r\n                gender: genderValue,\r\n                batText: bat,\r\n                bowlText: bowl,\r\n                bowlerText: bowler,\r\n                batter1Text: batter1,\r\n                batter2Text: batter2,\r\n                batter1runsText: batter1runs,\r\n                batter1ballsText: batter1balls,\r\n                batter2runsText: batter2runs,\r\n                batter2ballsText: batter2balls,\r\n                bowlerwicketsText: bowlerwickets,\r\n                bowlerrunsText: bowlerruns,\r\n                targetText: target\r\n            }, {\r\n                withCredentials: true\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                    setRefresh(!refresh)\r\n\r\n\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"1rem\" }}>\r\n\r\n                <h1> Admin Control </h1>\r\n\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} >\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Team A\"\r\n                                variant=\"standard\"\r\n                                value={team1}\r\n                                onChange={(e) => {\r\n                                    setTeam1(e.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Team B\"\r\n                                variant=\"standard\"\r\n                                value={team2}\r\n                                onChange={(e) => {\r\n                                    setTeam2(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Runs\"\r\n                                type=\"number\"\r\n                                variant=\"standard\"\r\n                                value={inputText}\r\n                                onChange={(e) => {\r\n                                    setInputText(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Wickets\"\r\n                                type=\"number\"\r\n                                variant=\"standard\"\r\n                                value={wicketsText}\r\n                                onChange={(e) => {\r\n                                    setWicketsText(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Overs\"\r\n                                type=\"number\"\r\n                                variant=\"standard\"\r\n                                value={overs}\r\n                                onChange={(e) => {\r\n                                    setOvers(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batting Team\"\r\n                                variant=\"standard\"\r\n                                value={bat}\r\n                                onChange={(e) => {\r\n                                    setBat(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Bowling Team\"\r\n                                variant=\"standard\"\r\n                                value={bowl}\r\n                                onChange={(e) => {\r\n                                    setBowl(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Bowler\"\r\n                                variant=\"standard\"\r\n                                value={bowler}\r\n                                onChange={(e) => {\r\n                                    setBowler(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batter 1\"\r\n                                variant=\"standard\"\r\n                                value={batter1}\r\n                                onChange={(e) => {\r\n                                    setBatter1(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batter 1 Runs\"\r\n                                variant=\"standard\"\r\n                                value={batter1runs}\r\n                                onChange={(e) => {\r\n                                    setBatter1runs(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batter 1 Balls\"\r\n                                variant=\"standard\"\r\n                                value={batter1balls}\r\n                                onChange={(e) => {\r\n                                    setBatter1balls(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batter 2\"\r\n                                variant=\"standard\"\r\n                                value={batter2}\r\n                                onChange={(e) => {\r\n                                    setBatter2(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batter 2 Runs\"\r\n                                variant=\"standard\"\r\n                                value={batter2runs}\r\n                                onChange={(e) => {\r\n                                    setBatter2runs(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batter 2 Balls\"\r\n                                variant=\"standard\"\r\n                                value={batter2balls}\r\n                                onChange={(e) => {\r\n                                    setBatter2balls(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Bowler Runs\"\r\n                                variant=\"standard\"\r\n                                value={bowlerruns}\r\n                                onChange={(e) => {\r\n                                    setBowlerruns(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Bowler Wicket\"\r\n                                variant=\"standard\"\r\n                                value={bowlerwickets}\r\n                                onChange={(e) => {\r\n                                    setBowlerwickets(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Target\"\r\n                                variant=\"standard\"\r\n                                value={target}\r\n                                onChange={(e) => {\r\n                                    setTarget(e.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\" >\r\n                                    Toss\r\n                                </FormLabel>\r\n                                <RadioGroup\r\n                                    aria-label=\"gender\"\r\n                                    defaultValue=\"Bat\"\r\n                                    name=\"genderParent\"\r\n                                >\r\n                                    <FormControlLabel\r\n                                        name=\"gender\"\r\n                                        value=\"Bat\"\r\n                                        control={<Radio />}\r\n                                        label=\"Bat\"\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        name=\"gender\"\r\n                                        value=\"Field\"\r\n                                        control={<Radio />}\r\n                                        label=\"Field\"\r\n                                    />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Button fullWidth variant=\"contained\" onClick={submit}>Post</Button>\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Box>\r\n\r\n\r\n\r\n                {/* {(isMore) ? <Button onClick={loadMore}>Load More</Button> : null} */}\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import './App.css';\nimport { baseUrl } from \"./server\"\nimport axios from 'axios';\nimport { useState, useEffect, useRef } from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown, Form } from 'react-bootstrap';\n\n\n\nimport Login from \"./components/login/index\"\nimport Signup from \"./components/signup/index\"\nimport Splash from \"./components/Splash/splash\"\nimport Scoreboard from \"./components/Scoreboard/index\"\nimport Dashboard from \"./components/profile/index\"\nimport { GlobalContext } from './context/Context';\nimport { useContext } from \"react\";\n\n\nfunction App() {\n\n  let history = useHistory();\n  let { state, dispatch } = useContext(GlobalContext);\n\n\n  const logout = () => {\n    axios.post(`${baseUrl}/api/v1/logout`, {}, {\n      withCredentials: true\n    })\n      .then((res) => {\n        console.log(\"res +++: \", res.data);\n  \n        dispatch({\n          type: \"USER_LOGOUT\"\n        })\n      })\n  }\n\n  useEffect(() => {\n\n    axios.get(`${baseUrl}/api/v1/profile`, {\n      withCredentials: true\n    })\n      .then((res) => {\n        console.log(\"res: \", res.data);\n\n        if (res.data.email) {\n\n          dispatch({\n            type: \"USER_LOGIN\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              _id: res.data._id,\n            }\n          })\n        } else {\n          dispatch({ type: \"USER_LOGOUT\" })\n        }\n      }).catch((e) => {\n        dispatch({ type: \"USER_LOGOUT\" })\n      })\n\n    return () => {\n    };\n  }, []);\n\n\n  // clear state\n\n\n  return (\n    <>\n\n    {(state?.user?.email)?\n      <Navbar className=\"bgcolor1\" expand=\"lg\">\n      <Container>\n          <Navbar.Brand href=\"#home\">React Login project</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => { history.push(\"/\") }}>Admin Panel</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/scoreboard\") }}>Score Board</Nav.Link>\n            </Nav>\n            <Form className=\"d-flex\">\n                <Button variant=\"danger\" onClick={logout}>Logout</Button>\n              </Form>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      :\n      <Navbar className=\"bgcolor1\" expand=\"lg\">\n      <Container>\n          <Navbar.Brand href=\"#home\">React Login project</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => { history.push(\"/\") }}>Login</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/signup\") }}>Signup</Nav.Link>\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      \n      }\n\n\n\n      {(state.user === undefined) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Splash />\n          </Route>\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        : null}\n\n      {(state.user === null) ?\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n\n          {/* <Redirect to=\"/\" /> */}\n        </Switch> : null\n      }\n\n      {(state.user) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/scoreboard\">\n            <Scoreboard />\n          </Route>\n\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        : null}\n\n\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport ContextProvider from \"./context/Context\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}